{"version":3,"sources":["C:/Users/manromero/RLibraryFrontHeroku/src async","C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/book.service.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/bookFile.service.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/bookType.service.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/index.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/app.component.css","C:/Users/manromero/RLibraryFrontHeroku/src/app/app.component.html","C:/Users/manromero/RLibraryFrontHeroku/src/app/app.component.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/app.module.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/books/books.component.css","C:/Users/manromero/RLibraryFrontHeroku/src/app/books/books.component.html","C:/Users/manromero/RLibraryFrontHeroku/src/app/books/books.component.ts","C:/Users/manromero/RLibraryFrontHeroku/src/app/utils/constants.ts","C:/Users/manromero/RLibraryFrontHeroku/src/environments/environment.ts","C:/Users/manromero/RLibraryFrontHeroku/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manromero/RLibraryFrontHeroku/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","/**\r\n * Created by manromero on 06/11/2017.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Constants } from '../utils/constants';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class BookService {\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  /**\r\n   * Devuelve todos los libros ordenados por title asc\r\n   * @returns {Observable<R|T>}\r\n   */\r\n  findAllByTitleAsc(): Observable<String[]> {\r\n    const url = Constants.API_ENDPOINT + 'book/findAllByTitleAsc';\r\n    return this.http.get(url)\r\n      .map((response: Response) => response.json())\r\n      .catch(error => Promise.reject(error));\r\n  }\r\n\r\n  /**\r\n   * Devuelve un book por su id\r\n   * @param idBook\r\n   * @returns {Observable<R|T>}\r\n   */\r\n  findById(idBook): Observable<String[]> {\r\n    const url = Constants.API_ENDPOINT + 'book/findById/' + idBook;\r\n    return this.http.get(url)\r\n      .map((response: Response) => response.json())\r\n      .catch(error => Promise.reject(error));\r\n  }\r\n\r\n  /**\r\n   * Call to save a book\r\n   * @param filmDto\r\n   */\r\n  save(bookDto: any) {\r\n    const body = JSON.stringify(bookDto);\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    const options = new RequestOptions({ headers: headers });\r\n    const url = Constants.API_ENDPOINT + 'book/save';\r\n    const response = this.http.post(url, body, options).map(res => res.json()).catch(error => Promise.reject(error));\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Elimina un libro\r\n   * @param idBook\r\n   * @returns {Observable<R|T>}\r\n   */\r\n  delete(idBook: any) {\r\n    const url = Constants.API_ENDPOINT + 'book/delete/' + idBook;\r\n    return this.http.get(url)\r\n      .map((response: Response) => response.json())\r\n      .catch(error => Promise.reject(error));\r\n  }\r\n\r\n  /**\r\n   * Call to to upload an image of a books\r\n   * @param idBook\r\n   * @param imageFile\r\n   */\r\n  uploadImage(idBook: any, imageFile: any) {\r\n    const url = Constants.API_ENDPOINT + 'book/uploadImage/' + idBook;\r\n    const response = this.http.post(url, imageFile).map(res => res.json()).catch(error => Promise.reject(error));\r\n    return response;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/book.service.ts","/**\r\n * Created by manromero on 07/11/2017.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Constants } from '../utils/constants';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class BookFileService {\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  /**\r\n   * Devuelve todos los archivos subidos de un determinado book\r\n   * @param book seleccionado\r\n   * @returns {Observable<R|T>}\r\n   */\r\n  findByIdBook(idBook): Observable<String[]> {\r\n    const url = Constants.API_ENDPOINT + 'bookFile/findByIdBook/' + idBook;\r\n    return this.http.get(url)\r\n      .map((response: Response) => response.json())\r\n      .catch(error => Promise.reject(error));\r\n  }\r\n\r\n  /**\r\n   * Elimina un libro fichero de un libro\r\n   * @param idBookFile\r\n   * @returns {Observable<R|T>}\r\n   */\r\n  delete(idBookFile: any) {\r\n    const url = Constants.API_ENDPOINT + 'bookFile/delete/' + idBookFile;\r\n    return this.http.get(url)\r\n      .map((response: Response) => response.json())\r\n      .catch(error => Promise.reject(error));\r\n  }\r\n\r\n  /**\r\n   * Call to to upload a file to the book\r\n   * @param idBook\r\n   * @param format\r\n   * @param file\r\n   */\r\n  uploadFile(idBook: any, format: any, file: any) {\r\n    const url = Constants.API_ENDPOINT + 'bookFile/uploadFile/' + idBook + '/' + format;\r\n    const response = this.http.post(url, file).map(res => res.json()).catch(error => Promise.reject(error));\r\n    return response;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/bookFile.service.ts","/**\r\n * Created by manromero on 06/11/2017.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Constants } from '../utils/constants';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class BookTypeService {\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  /**\r\n   * Devuelve todos los tipos de libros ordenados por descripcion asc\r\n   * @returns {Observable<R|T>}\r\n   */\r\n  findAllByDescriptionDesc(): Observable<String[]> {\r\n    const url = Constants.API_ENDPOINT + 'bookType/findAllByDescriptionAsc';\r\n    return this.http.get(url)\r\n      .map((response: Response) => response.json())\r\n      .catch(error => Promise.reject(error));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/bookType.service.ts","/**\r\n * Created by manromero on 06/11/2017.\r\n */\r\nexport * from './bookType.service';\r\nexport * from './book.service';\r\nexport * from './bookFile.service';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/_services/index.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CustomFormsModule } from 'ng2-validation';\n\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { AppComponent } from './app.component';\n\nimport { Constants } from './utils/constants';\nimport { BooksComponent } from './books/books.component';\nimport { BookTypeService, BookService, BookFileService } from './_services/index';\n\nconst appRoutes: Routes = [\n  { path: '', component: BooksComponent },\n  { path: Constants.RUTA_LISTADO_BOOKS, component: BooksComponent },\n  { path: '**', redirectTo: Constants.RUTA_LISTADO_BOOKS }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BooksComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CustomFormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    ButtonsModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  providers: [\n    BookTypeService,\n    BookService,\n    BookFileService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/books/books.component.css\n// module id = ../../../../../src/app/books/books.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container margint30px\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n\\r\\n      <div class=\\\"panel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button class=\\\"btn btn-success btn-block\\\" (click)=\\\"createBook(viewModal)\\\">Nuevo Libro</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"list-group margint20px\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"list-group-item\\\" [ngClass]=\\\"{'active': bookTypeSelected == 0 }\\\" (click)=\\\"changeBookTypeSelected(0)\\\"> Todos </button>\\r\\n            <button type=\\\"button\\\" *ngFor=\\\"let bt of listBookType\\\" class=\\\"list-group-item\\\" [ngClass]=\\\"{'active': bookTypeSelected == bt.id }\\\" (click)=\\\"changeBookTypeSelected(bt.id)\\\"> {{bt.description}} </button>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n\\r\\n      <div class=\\\"panel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <input type=\\\"text\\\" placeholder=\\\"Título\\\" [(ngModel)]=\\\"filtroTitle\\\" (keyup)=\\\"filterBooksByIdBookTypeAndTitle()\\\" class=\\\"form-control width100 marginb4\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div *ngFor=\\\"let b of listBook\\\" class=\\\"col-md-4 marginb4\\\">\\r\\n              <div class=\\\"imageBorder cursorPointer\\\">\\r\\n                <img *ngIf=\\\"!b.cover\\\" width=\\\"100%\\\" height=\\\"240px\\\" src=\\\"../../assets/images/default.png\\\" (click)=\\\"openViewModal(viewModal, b.id)\\\">\\r\\n                <img *ngIf=\\\"b.cover\\\" width=\\\"100%\\\" height=\\\"240px\\\" src=\\\"data:image/png;base64,{{b.cover}}\\\" (click)=\\\"openViewModal(viewModal, b.id)\\\">\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 textAlignCenter\\\">\\r\\n                  <h4>{{b.title}}</h4>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div> <!-- termina row-->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div><!-- termina row -->\\r\\n</div><!-- termina container-->\\r\\n\\r\\n<!-- Modal -->\\r\\n<ng-template #viewModal>\\r\\n\\r\\n  <!-- Visualizando el libro -->\\r\\n  <div class=\\\"modal-header\\\" *ngIf=\\\"!isBeingEdited\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">{{bookDto.title}} - {{bookDto.author}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Editando/creando el libro -->\\r\\n  <div class=\\\"modal-header\\\" *ngIf=\\\"isBeingEdited\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Edición / Creación Libro</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Visualizando el libro -->\\r\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"!isBeingEdited\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12 imageBorder\\\">\\r\\n            <img *ngIf=\\\"!bookDto.cover\\\" width=\\\"100%\\\" height=\\\"300px\\\" src=\\\"../../assets/images/default.png\\\">\\r\\n            <img *ngIf=\\\"bookDto.cover\\\" width=\\\"100%\\\" height=\\\"300px\\\" src=\\\"data:image/png;base64,{{bookDto.cover}}\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row margint3\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button class=\\\"btn btn-default btn-block\\\" (click)=\\\"changeToEditMode()\\\">Editar</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <h4>Descripción:</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <p>{{bookDto.description}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block\\\" *ngFor=\\\"let bf of listBookFile\\\" (click)=\\\"downloadBookFile(bf)\\\">Descargar libro en formato {{bf.format}}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- Editando/creando el libro -->\\r\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"isBeingEdited\\\">\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!deletedBook\\\">\\r\\n\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <!-- Form para subir imagen -->\\r\\n            <form>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"portada\\\">Portada</label>\\r\\n                <input id=\\\"portada\\\" type=\\\"file\\\" multiple=\\\"false\\\" (change)=\\\"previewImage($event)\\\" accept=\\\"image/*\\\" [disabled]=\\\"!bookSaved\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group textAlignCenter imageBorder\\\" *ngIf=\\\"imagePreview\\\">\\r\\n                <img width=\\\"270px\\\" height=\\\"300px\\\" [src]=\\\"imagePreview\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group textAlignCenter imageBorder\\\" *ngIf=\\\"!imagePreview && bookDto.cover\\\">\\r\\n                <img width=\\\"270px\\\" height=\\\"300px\\\" src=\\\"data:image/png;base64,{{bookDto.cover}}\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorImage\\\">{{errorImage}}</div>\\r\\n              <div class=\\\"alert alert-success\\\" *ngIf=\\\"okImageAdd\\\">La imagen se ha guardado correctamente</div>\\r\\n\\r\\n              <div class=\\\"form-group textAlignCenter\\\">\\r\\n                <button [disabled]=\\\"loadingImage ||!bookSaved\\\" (click)=\\\"uploadImage()\\\" class=\\\"btn btn-primary\\\">Editar Imagen</button>\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div> <!-- Fin de la columna -->\\r\\n\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <form (ngSubmit)=\\\"saveBook(bookForm)\\\" #bookForm=\\\"ngForm\\\">\\r\\n\\r\\n              <!-- la version y el id estaran presentes cuando el book se este editando y no creando -->\\r\\n              <input *ngIf=\\\"bookDto.id\\\" type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"bookDto.id\\\" #id=\\\"ngModel\\\">\\r\\n              <input *ngIf=\\\"bookDto.version\\\" type=\\\"hidden\\\" name=\\\"version\\\" [(ngModel)]=\\\"bookDto.version\\\" #version=\\\"ngModel\\\">\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"title\\\">Título</label>\\r\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"bookDto.title\\\" #title=\\\"ngModel\\\" placeholder=\\\"Título\\\" required [rangeLength]=\\\"[1, 100]\\\"/>\\r\\n                <div *ngIf=\\\"(title.touched || bookForm.submitted) && title.hasError('required')\\\" class=\\\"alert alert-danger\\\">El Título del libro es obligatorio</div>\\r\\n                <div *ngIf=\\\"(title.touched || bookForm.submitted) && title.hasError('rangeLength')\\\" class=\\\"alert alert-danger\\\">El Título del libro debe estar comprendido entre 1 y 100 caracteres</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"author\\\">Autor</label>\\r\\n                <input id=\\\"author\\\" name=\\\"author\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"bookDto.author\\\" #author=\\\"ngModel\\\" placeholder=\\\"Autor\\\" required [rangeLength]=\\\"[1, 100]\\\"/>\\r\\n                <div *ngIf=\\\"(author.touched || bookForm.submitted) && author.hasError('required')\\\" class=\\\"alert alert-danger\\\">El Autor del libro es obligatorio</div>\\r\\n                <div *ngIf=\\\"(author.touched || bookForm.submitted) && author.hasError('rangeLength')\\\" class=\\\"alert alert-danger\\\">El Autor del libro debe estar comprendido entre 1 y 100 caracteres</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\">Descripción</label>\\r\\n                <textarea id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"bookDto.description\\\" #description=\\\"ngModel\\\" placeholder=\\\"Descripción\\\" required [rangeLength]=\\\"[1, 500]\\\"></textarea>\\r\\n                <div *ngIf=\\\"(description.touched || bookForm.submitted) && description.hasError('required')\\\" class=\\\"alert alert-danger\\\">La Descipción del libro es obligatoria</div>\\r\\n                <div *ngIf=\\\"(description.touched || bookForm.submitted) && description.hasError('rangeLength')\\\" class=\\\"alert alert-danger\\\">La Descripción del libro debe estar comprendida entre 1 y 500 caracteres</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"bookTypeDto\\\">Género</label>\\r\\n                <select id=\\\"bookTypeDto\\\" name=\\\"bookTypeDto\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"bookDto.bookTypeDto.id\\\" #bookTypeDto=\\\"ngModel\\\" required>\\r\\n                  <option [ngValue]=\\\"null\\\">Seleccione Género</option>\\r\\n                  <option *ngFor=\\\"let bt of listBookType\\\" [ngValue]=\\\"bt.id\\\">{{bt.description}}</option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"(bookTypeDto.touched || bookForm.submitted) && bookTypeDto.hasError('required')\\\" class=\\\"alert alert-danger\\\">El Género del libro es obligatorio</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorSaveBook\\\">{{errorSaveBook}}</div>\\r\\n              <div class=\\\"alert alert-success\\\" *ngIf=\\\"bookModified\\\">El Libro se ha guardado correctamente</div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4 col-md-offset-2 textAlignCenter\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"!bookDto || !bookDto.id\\\" (click)=\\\"openModal(modalDeleteBook)\\\" class=\\\"btn btn-danger btn-block\\\">Eliminar Libro</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4 textAlignCenter\\\">\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"loadingBook\\\" class=\\\"btn btn-primary btn-block\\\">Guardar Libro</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <!-- Form para subir ficheros -->\\r\\n            <form>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"bookFile\\\">Ficheros</label>\\r\\n                <input id=\\\"bookFile\\\" type=\\\"file\\\" multiple=\\\"false\\\" (change)=\\\"uploadBookFile($event)\\\" accept=\\\".pdf, .epub, .mobi, .txt\\\" [disabled]=\\\"!bookSaved\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row margint10px\\\" *ngFor=\\\"let bf of listBookFile\\\">\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                  <button class=\\\"btn btn-default btn-block\\\" (click)=\\\"downloadBookFile(bf)\\\">Descargar libro en formato {{bf.format}}</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"deleteBookFile(bf.id)\\\">Eliminar</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div><!-- Fin de la columna -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"deletedBook\\\">El Libro se ha eliminado correctamente</div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<!-- Modal eliminar book -->\\r\\n<ng-template #modalDeleteBook>\\r\\n\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">{{bookDto.title}} - {{bookDto.author}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h2>¿Desea eliminar el libro?</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button (click)=\\\"modalRef.hide()\\\" class=\\\"btn btn-primary btn-block\\\">No</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button (click)=\\\"deleteBook()\\\" class=\\\"btn btn-danger btn-block\\\">Si</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/books/books.component.html\n// module id = ../../../../../src/app/books/books.component.html\n// module chunks = 1","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { BookTypeService, BookService, BookFileService } from '../_services/index';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FileReaderEvent } from '../utils/fileReaderInterface';\r\nimport { saveAs } from 'file-saver/FileSaver';\r\n\r\n@Component({\r\n  templateUrl: './books.component.html',\r\n  styleUrls: ['./books.component.css']\r\n})\r\nexport class BooksComponent implements OnInit {\r\n\r\n  // Listado de tipos de books\r\n  listBookType: any;\r\n  // Tipo de book seleccionado\r\n  bookTypeSelected: any;\r\n  // Listado de books\r\n  listFullBook: any;\r\n  // Listado de books que se muestran\r\n  listBook: any;\r\n  // Filtro por el titulo\r\n  filtroTitle: any;\r\n  // Modal\r\n  modalRef: BsModalRef;\r\n  // Book seleccionado\r\n  bookDto: any;\r\n  // Lista de archivos de un determinado book\r\n  listBookFile: any;\r\n  // Variable que indica si se está editando un book\r\n  isBeingEdited = false;\r\n  // Indica si un book se ha eliminado correctamente\r\n  deletedBook = false;\r\n  // Indica si se ha producido un error al guardar el book\r\n  errorSaveBook: any\r\n  // Indica si se esta procesando el guardado del book\r\n  loadingBook = false;\r\n  // Indica si la serie esta guardada en base de datos\r\n  bookSaved = false;\r\n  // Indica si una serie se ha guardado correctamente\r\n  bookModified = false;\r\n  // previsualizacion imagen\r\n  imagePreview: any;\r\n  // Activara y desactivara el boton de guardar imagen cuando se esté editando\r\n  loadingImage = false;\r\n  // Error al subir imagen\r\n  errorImage: any;\r\n  // Imagen añadida correctamente\r\n  okImageAdd = false;\r\n\r\n  constructor(\r\n    private bookTypeService: BookTypeService,\r\n    private bookService: BookService,\r\n    private bookFileService: BookFileService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    console.log('Constructor BooksComponent');\r\n    // Cargamos los tipos de book\r\n    this.bookTypeService.findAllByDescriptionDesc().subscribe(data => this.listBookType = data);\r\n    // Por defecto no habrá ningún tipo de book seleccionada\r\n    this.bookTypeSelected = 0;\r\n    // Recuperamos todos los books\r\n    this.bookService.findAllByTitleAsc().subscribe(\r\n      data => {\r\n        this.listFullBook = data;\r\n        this.listBook = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    // En un primer momento el filtro del title\r\n    this.filtroTitle = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('NgOnInit BooksComponent');\r\n  }\r\n\r\n  /**\r\n   * Cambia el tipo de categoria seleccionada\r\n   * @param bookTypeSelectedId\r\n   */\r\n  changeBookTypeSelected(bookTypeSelectedId: any) {\r\n    this.bookTypeSelected = bookTypeSelectedId;\r\n    this.filterBooksByIdBookTypeAndTitle();\r\n  }\r\n\r\n  /**\r\n   * Filtra los books que se encuentran en el listado\r\n   */\r\n  filterBooksByIdBookTypeAndTitle() {\r\n    console.log('Filtro Books');\r\n    // Si el filtro por title es vacio solo filtro por tipo\r\n    if (this.filtroTitle === '') {\r\n      // Si el filtro por tipo es 0 devuelvo todas los libros, si no filtro por tipo\r\n      if (this.bookTypeSelected === 0) {\r\n        this.listBook = this.listFullBook;\r\n      } else {\r\n        this.listBook = [];\r\n        for (const book of this.listFullBook) {\r\n          if (book.bookTypeDto.id === this.bookTypeSelected ) {\r\n            this.listBook.push(book);\r\n          }\r\n        }\r\n      }\r\n    }else {\r\n      // Si el filtro de title no es vacio y el filtro de tipo es 0, solo filtro por su title\r\n      if (this.bookTypeSelected === 0) {\r\n        this.listBook = [];\r\n        for (const book of this.listFullBook) {\r\n          if (book.title.toLowerCase().includes(this.filtroTitle.toLowerCase())) {\r\n            this.listBook.push(book);\r\n          }\r\n        }\r\n      } else {\r\n        // Si el filtro de title no es vacio y el de tipo no es 0, filtro por los dos tipos\r\n        this.listBook = [];\r\n        for (const book of this.listFullBook) {\r\n          if (book.bookTypeDto.id === this.bookTypeSelected &&  book.title.toLowerCase().includes(this.filtroTitle.toLowerCase())) {\r\n            this.listBook.push(book);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abrir modal al seleccionar un libro\r\n   * @param {TemplateRef<any>} templateRef\r\n   * @param idBook\r\n   */\r\n  public openViewModal(templateRef, idBook) {\r\n    this.bookService.findById(idBook).subscribe(\r\n      data => {\r\n        console.log('se ha recuperado el video seleccionado');\r\n        this.bookDto = data;\r\n        // Recuperamos los ficheros de descarga asociados al libro\r\n        this.bookFileService.findByIdBook(idBook).subscribe(data2 => this.listBookFile = data2);\r\n        // El modal no se mostrará en formato edicion\r\n        this.isBeingEdited = false;\r\n        this.modalRef = this.modalService.show(templateRef, Object.assign({class: 'modal-lg'}));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        console.log('Llamada a recuperar book terminada');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Abre el modal para crear un nuevo libro\r\n   * @param templateRef\r\n   */\r\n  createBook(templateRef) {\r\n    // Inicializamos el bookDto\r\n    this.bookDto = {};\r\n    this.bookDto.bookTypeDto = {id: null};\r\n    // El listado de ficheros en un primer momento es vacio\r\n    this.listBookFile = [];\r\n    // Muestra el modal en modo edicion\r\n    this.isBeingEdited = true;\r\n    // Indica que un book se ha eliminado\r\n    this.deletedBook = false;\r\n    // Indica si se ha producido algun error al guardar el book\r\n    this.errorSaveBook = null;\r\n    // Indica si se está procesando el guardado del book\r\n    this.loadingBook = false;\r\n    // El book proviene de base de datos\r\n    this.bookSaved = false;\r\n    // Indica si una serie se ha guardado correctamente\r\n    this.bookModified = false;\r\n    // Indica si una imagen se ha añadido correctamente\r\n    this.okImageAdd = false;\r\n    // Indica si se ha producido un error al añadir una imagen\r\n    this.errorImage = null;\r\n    // Abre el modal\r\n    this.modalRef = this.modalService.show(templateRef, Object.assign({class: 'modal-lg'}));\r\n  }\r\n\r\n  /**\r\n   * Abrir modal\r\n   * @param {TemplateRef<any>} referenciaModal\r\n   */\r\n  public openModal(referenciaModal) {\r\n    this.modalRef = this.modalService.show(referenciaModal);\r\n  }\r\n\r\n  /**\r\n   * El modal de visualizacion pasa a verse en modo editicion\r\n   */\r\n  changeToEditMode() {\r\n    // Muestra el modal en modo edicion\r\n    this.isBeingEdited = true;\r\n    // Indica que un book se ha eliminado\r\n    this.deletedBook = false;\r\n    // Indica si se ha producido algun error al guardar el book\r\n    this.errorSaveBook = null;\r\n    // Indica si se está procesando el guardado del book\r\n    this.loadingBook = false;\r\n    // El book proviene de base de datos\r\n    this.bookSaved = true;\r\n    // Indica si una serie se ha guardado correctamente\r\n    this.bookModified = false;\r\n    // Indica si una imagen se ha añadido correctamente\r\n    this.okImageAdd = false;\r\n    // Indica si se ha producido un error al añadir una imagen\r\n    this.errorImage = null;\r\n  }\r\n\r\n  /**\r\n   * Guarda/Actualiza un book si tiene los datos rellenados correctamente\r\n   * @param bookForm\r\n   */\r\n  saveBook(bookForm: FormGroup) {\r\n    console.log('Llamada a saveBook');\r\n    this.errorSaveBook = null;\r\n    if (bookForm.valid) {\r\n      // Desactivaremos el botón de guardar hasta que la llamada al web service haya finalizado\r\n      this.loadingBook = true;\r\n      // Si tiene id y no tiene la version, es porque su valor vale 0\r\n      if (bookForm.value.id && !bookForm.value.version) {\r\n        bookForm.value.version = 0;\r\n      }\r\n      // Creamos el bookTypeDto dentro de bookDto\r\n      const idBookType = bookForm.value.bookTypeDto;\r\n      bookForm.value.bookTypeDto = {id: idBookType};\r\n      this.bookService.save(bookForm.value).subscribe(\r\n        data => {\r\n          this.bookDto = data;\r\n          // Estará bien guardado si no devuelve errores\r\n          this.bookSaved = this.bookDto.errores.length === 0;\r\n          this.bookModified = this.bookSaved;\r\n          if (!this.bookSaved) {\r\n            this.errorSaveBook = 'Se ha producido un error al guardar la seriea';\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingBook = false;\r\n          this.bookModified = false;\r\n          this.errorSaveBook = 'Se ha producido un error al guardar el libro';\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          this.loadingBook = false;\r\n          console.log('LLamada terminada');\r\n        }\r\n      );\r\n\r\n    } else {\r\n      this.errorSaveBook = 'Se ha producido un error al guardar el libro';\r\n      console.log('Error en el formulario de guardar book');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Realiza la llamada al servicio para eliminar un libro\r\n   */\r\n  deleteBook() {\r\n    this.bookService.delete(this.bookDto.id).subscribe(\r\n      result => {\r\n        this.modalRef.hide();\r\n        this.deletedBook = true;\r\n        // Actualizamos el listado de libros\r\n        this.bookService.findAllByTitleAsc().subscribe(\r\n          data => {\r\n            this.listFullBook = data;\r\n            this.filterBooksByIdBookTypeAndTitle();\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        console.log('Llamada terminada');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Previsualizamos imagen\r\n   * @param {Event} imageInput\r\n   */\r\n  previewImage(imageInput: Event) {\r\n    const target = (<HTMLInputElement>imageInput.target);\r\n    if (target.files && target.files[0]) {\r\n      // Imagen a premostrar\r\n      const reader = new FileReader();\r\n      reader.onload = (event: FileReaderEvent) => {\r\n        this.imagePreview = event.target.result;\r\n      };\r\n      reader.readAsDataURL(target.files[0]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subir imagen al servidor\r\n   */\r\n  uploadImage() {\r\n    const inputEl: HTMLInputElement = <HTMLInputElement> document.getElementById('portada');\r\n    if (inputEl.files && inputEl.files[0]) {\r\n      this.loadingImage = true;\r\n      const formData = new FormData();\r\n      formData.append('file', inputEl.files[0]);\r\n      this.errorImage = null;\r\n      this.bookService.uploadImage(this.bookDto.id, formData)\r\n        .subscribe(\r\n          result => {\r\n            this.bookDto = result;\r\n            this.okImageAdd = this.bookDto.cover !== undefined && this.bookDto.cover != null;\r\n            if (!this.okImageAdd) {\r\n              this.errorImage = 'Se ha producido un error al subir la imagen';\r\n            }\r\n            this.loadingImage = false;\r\n            // Actualizamos el listado de libros\r\n            this.bookService.findAllByTitleAsc().subscribe(\r\n              data => {\r\n                this.listFullBook = data;\r\n                this.filterBooksByIdBookTypeAndTitle();\r\n              },\r\n              error => {\r\n                console.log(error);\r\n              }\r\n            );\r\n            console.log('File Upload');\r\n          },\r\n          error => {\r\n            this.okImageAdd = false;\r\n            this.errorImage = 'Se ha producido un error al subir la imagen';\r\n            this.loadingImage = false;\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            this.loadingImage = false;\r\n            console.log('Llamada terminada');\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sbuir un fichero asociado a un book\r\n   * @param event\r\n   */\r\n  uploadBookFile(event) {\r\n    const inputEl: HTMLInputElement = <HTMLInputElement> document.getElementById('bookFile');\r\n    if (inputEl.files && inputEl.files[0]) {\r\n      const fileName = inputEl.files[0].name;\r\n      const partsToFormat = fileName.split('.');\r\n      if (partsToFormat != null && partsToFormat.length > 1) {\r\n        const format = partsToFormat[partsToFormat.length - 1];\r\n        const formData = new FormData();\r\n        formData.append('file', inputEl.files[0]);\r\n        this.bookFileService.uploadFile(this.bookDto.id, format, formData).subscribe(\r\n          result => {\r\n            // El fichero se ha subido correctamente\r\n            // Actualizamos la lista de ficheros\r\n            this.bookFileService.findByIdBook(this.bookDto.id).subscribe(data => this.listBookFile = data);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            console.log('Llamada a subir fichero finalizada')\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Descarga un book file\r\n   * @param bookFile\r\n   */\r\n  downloadBookFile(bookFileDto) {\r\n    const filename = this.bookDto.title + ' (' + this.bookDto.author + ').' + bookFileDto.format;\r\n    fetch('data:application/' + bookFileDto.format + ';base64,' + bookFileDto.file)\r\n      .then(function(resp) {return resp.blob()})\r\n      .then(function(blob) {\r\n        saveAs(blob, filename)\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Elimina un bookFile\r\n   * @param idBookFile\r\n   */\r\n  deleteBookFile(idBookFile) {\r\n    this.bookFileService.delete(idBookFile).subscribe(\r\n      data => {\r\n        // Actualizamos la lista de fichero de un book\r\n        this.bookFileService.findByIdBook(this.bookDto.id).subscribe(data2 => this.listBookFile = data2);\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/books/books.component.ts","/**\r\n * Created by manromero on 06/11/2017.\r\n */\r\n// Dirección base de la url para acceder al web service\r\nexport class Constants {\r\n\r\n  // Dirección base de la url para acceder al web service\r\n  public static API_ENDPOINT = 'https://rlibrary.herokuapp.com/';\r\n\r\n  // Rutas\r\n  public static RUTA_LISTADO_BOOKS = 'books';\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/app/utils/constants.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manromero/RLibraryFrontHeroku/src/main.ts"],"sourceRoot":"webpack:///"}